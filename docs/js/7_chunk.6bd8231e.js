(this.webpackJsonptheblog=this.webpackJsonptheblog||[]).push([[7],{129:function(e,n,t){"use strict";t.r(n),t.d(n,"NoSupport",(function(){return g})),t.d(n,"Article",(function(){return v}));var r=t(8),o=t(2),i=t(0),a=t.n(i),s=t(1),c=t(21);function l(){var e=Object(o.a)(["\n  position: relative;\n  video {\n    width: 60rem;\n    height: 40rem;\n    margin: 0 auto;\n  }\n"]);return l=function(){return e},e}function d(){var e=Object(o.a)(["\n  margin: 2rem auto;\n  padding: 2rem;\n  text-align: center;\n  min-height: 150px;\n  font-weight: 600;\n  font-size: 2.4rem;\n  display: flex;\n  color: #fff;\n  align-items: center;\n  justify-content: center;\n  background-size: 100% 100%;\n  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);\n  background: linear-gradient(\n    45deg,\n    #ff0000,\n    #ff7300,\n    #fffb00,\n    #48ff00,\n    #00ffd5,\n    #002bff,\n    #7a00ff,\n    #ff00c8,\n    #ff0000\n  );\n"]);return d=function(){return e},e}var u=s.d.div(d()),m={audio:!1,video:{width:{exact:720},height:{exact:480}}},f=s.d.div(l()),g=function(e){var n=e.text;return(a.a.createElement(u,null,a.a.createElement("div",{style:{maxWidth:"450px"}},a.a.createElement("span",{role:"img","aria-label":"cry",className:"emoji-cry"}),"\xa0",n)))},v=function(){var e=Object(i.useRef)(null),n=Object(i.useState)(0),t=Object(r.a)(n,2),o=t[0],s=t[1],l=function(){switch(o){case-1:return"Your browser does not support Media";case-2:return"The resolution is not supported by your device.";case-3:return"Permissions have not been granted.";case-4:return"An error occurred.";default:return""}}();return Object(i.useEffect)((function(){var n=!0;if(e.current&&0===o){var t=e.current;try{navigator.mediaDevices.getUserMedia(m).then((function(e){if(n){var r=e.getVideoTracks();console.info("Got stream with constraints:",m),console.info("Using video device: "+r[0].label),e.onremovetrack=function(){console.log("Stream ended")},e.onaddtrack=function(){console.log("Stream added")},t.srcObject=e,t.play(),s(1)}})).catch((function(e){if(n)switch(e.name){case"ConstraintNotSatisfiedError":s(-2);break;case"PermissionDeniedError":case"NotAllowedError":s(-3);break;default:s(-4),console.warn("following error occurred: ",e)}}))}catch(r){s(-1)}}return function(){n=!1}}),[]),a.a.createElement("article",null,a.a.createElement("figure",null,a.a.createElement(f,null,o<0&&a.a.createElement(g,{text:l}),o>=0&&a.a.createElement("video",{ref:e,controls:!0},a.a.createElement(g,{text:l}))),a.a.createElement("figcaption",null,"Allowing Permission Will Reflect The Stream of Your Camera")),a.a.createElement("p",null,"These days, the services use cam are everywhere like Zoom and Google Meet.",a.a.createElement("br",null),"Actually I've never gotten a chance to use mediaDevices, and like to use it.",a.a.createElement("br",null),"Seeing this work feels still amazing."),a.a.createElement("p",null,"Following code is used here."),a.a.createElement(c.a,{text:"const videoRef = useRef(null);\nconst [mediaPermission, setMediaPermission] = useState(0);\nuseEffect(() => {\n  // permission is answered by promise and \n  // the component can be destroyed\n  // at the time of receiving the answer\n  // set flag for not destroyed.\n  let on = true;\n  if (videoRef.current && mediaPermission === 0) {\n    // status 0: not tried\n    // status 1: got permission\n    // status < 0: error not denied permission\n    const video = videoRef.current;\n    try {\n      // some browsers do not support mediaDevices\n      // https://developer.mozilla.org/ko/docs/Web/API/MediaDevices \n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(function(stream) {\n          if (!on) {\n            return;\n          }\n          const videoTracks = stream.getVideoTracks();\n          console.info('Got stream with constraints:', constraints);\n          console.info('Using video device: ' + videoTracks[0].label);\n          stream.onremovetrack = function() {\n            console.log('Stream ended');\n          };\n          stream.onaddtrack = function() {\n            console.log('Stream added');\n          };\n          video.srcObject = stream;\n          video.play();\n          setMediaPermission(1);\n        })\n        .catch(function(error) {\n          if (!on) {\n            return;\n          }\n          switch (error.name) {\n            case 'ConstraintNotSatisfiedError':\n              setMediaPermission(-2);\n              break;\n            case 'PermissionDeniedError':\n            case 'NotAllowedError':\n              setMediaPermission(-3);\n              break;\n            default:\n              setMediaPermission(-4);\n              console.warn('following error occurred: ', error);\n          }\n        });\n    } catch (e) {\n      setMediaPermission(-1);\n    }\n  }\n  return () => {\n    on = false;\n  };\n}, []);\n"}))};v.summaryInfo={title:"mediaDevices Video Cam",type:"write",desc:"Camera Stream on Video Demonstration",tags:["Web Apis","Demonstration"],series:"demonstration",time:"20201112",imageUrl:""},n.default=v}}]);